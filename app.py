# app.py
"""–°—Ç–∞—Ä—Ç: –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª, –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–ª–æ–Ω–∫–∏ –∏ –≤—ã–∑–≤–∞—Ç—å –¥–∞—à–±–æ—Ä–¥."""
import streamlit as st, pandas as pd
from dashboard import run_dashboard

st.set_page_config(page_title="Segment Viewer",layout="centered")
st.markdown("""
<style>
div.block-container{max-width:100%!important; padding-top:3rem;}
body{background:linear-gradient(180deg,#0077FF 0%,#E9F4FF 100%);}
section[data-testid="stFileUploader"]{margin-left:auto;margin-right:auto;}
</style>""",unsafe_allow_html=True)

# ---- —Å–∏–Ω–æ–Ω–∏–º—ã –∫–æ–ª–æ–Ω–æ–∫ ----
ALIASES = {
 "segment":["segment"],
 "–¢–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞":["–¢–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞"],
 "–ü–æ–ª":["–ü–æ–ª","–ü–û–õ"],
 "–õ–µ—Ç":["–õ–µ—Ç","–í–æ–∑—Ä–∞—Å—Ç","–õ–ï–¢"],
 "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤–∏–∑–∏—Ç–∞ –≤ VK":["–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤–∏–∑–∏—Ç–∞ –≤ VK","–£–°–¢–†–û–ô–°–¢–í–û –í–ò–ó–ò–¢–ê –í –í–ö"],
}
def _read(upload):
    return pd.read_csv(upload) if upload.name.lower().endswith(".csv") else pd.read_excel(upload)

def _canon(df):
    miss=[]; mapping={}
    for canon,vars in ALIASES.items():
        for v in vars:
            if v in df.columns: mapping[v]=canon; break
        else: miss.append(canon)
    return df.rename(columns=mapping),miss

def _home():
    st.markdown("<h1 style='text-align:center;'>üëã Segment Viewer –¥–ª—è –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–æ–≤</h1>",unsafe_allow_html=True)
    st.markdown("<p style='text-align:center;font-size:1.1rem;'>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—ã–≥—Ä—É–∑–∫—É <b>–í–ö–æ–Ω—Ç–∞–∫—Ç–µ</b> ‚Äì –ø–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥.</p>",unsafe_allow_html=True)
    up=st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª Excel/CSV",type=["xlsx","csv"])
    if up is None:
        st.info("üìÇ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å‚Ä¶"); return
    try: df=_read(up)
    except Exception as e: st.error(f"–ù–µ –ø—Ä–æ—á–∏—Ç–∞–ª —Ñ–∞–π–ª: {e}"); return
    st.success(f"–§–∞–π–ª: {df.shape[0]} —Å—Ç—Ä–æ–∫ / {df.shape[1]} —Å—Ç–æ–ª–±—Ü–æ–≤")
    df,miss=_canon(df)
    if miss: st.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–ª–æ–Ω–∫–∏: "+", ".join(miss)); return
    st.session_state.df=df; st.rerun()

if "df" not in st.session_state:
    _home()
else:
    run_dashboard(st.session_state.df)